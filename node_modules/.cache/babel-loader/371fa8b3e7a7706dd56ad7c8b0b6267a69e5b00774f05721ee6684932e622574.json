{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getData } from '@/API';\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      tableData: [],\n      tableList: {\n        name: '手机',\n        todayBuy: '今日销售',\n        monthBuy: '月销售',\n        totalBuy: '总销售'\n      },\n      countData: [{\n        name: \"今日支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"今日收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"今日未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }, {\n        name: \"本月支付订单\",\n        value: 1234,\n        icon: \"success\",\n        color: \"#2ec7c9\"\n      }, {\n        name: \"本月收藏订单\",\n        value: 210,\n        icon: \"star-on\",\n        color: \"#ffb980\"\n      }, {\n        name: \"本月未支付订单\",\n        value: 1234,\n        icon: \"s-goods\",\n        color: \"#5ab1ef\"\n      }]\n    };\n  },\n  methods: {\n    tableRowClassName({\n      row,\n      rowIndex\n    }) {\n      if (rowIndex === 1) {\n        return 'warning-row';\n      } else if (rowIndex === 3) {\n        return 'success-row';\n      }\n      return '';\n    }\n  },\n  mounted() {\n    getData().then(({\n      data\n    }) => {\n      const {\n        tableData,\n        userData,\n        videoData\n      } = data.data;\n      this.tableData = tableData;\n      const echarts1 = echarts.init(this.$refs.echarts1);\n      var echarts1Option = {};\n      const {\n        orderData\n      } = data.data;\n      const xAxis = Object.keys(orderData.data[0]);\n      const xAxisData = {\n        data: xAxis\n      };\n      echarts1Option.xAxis = {\n        data: [\"一月份\", \"二月份\", \"三月份\", \"四月份\", \"五月份\", \"六月份\"]\n      };\n      echarts1Option.yAxis = {};\n      echarts1Option.tooltip = {};\n      echarts1Option.legend = xAxisData;\n      echarts1Option.series = [];\n      xAxis.forEach(key => {\n        echarts1Option.series.push({\n          name: key,\n          data: orderData.data.map(item => item[key]),\n          type: 'line'\n        });\n      });\n      console.log(echarts1Option);\n      echarts1.setOption(echarts1Option);\n      const echarts2 = echarts.init(this.$refs.echarts2);\n      const eachrts2Option = {\n        legend: {\n          // 图例文字颜色\n          textStyle: {\n            color: \"#333\"\n          }\n        },\n        grid: {\n          left: \"20%\"\n        },\n        // 提示框\n        tooltip: {\n          trigger: \"axis\"\n        },\n        xAxis: {\n          type: \"category\",\n          // 类目轴\n          data: userData.map(item => item.date),\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          },\n          axisLabel: {\n            interval: 0,\n            color: \"#333\"\n          }\n        },\n        yAxis: [{\n          type: \"value\",\n          axisLine: {\n            lineStyle: {\n              color: \"#17b3a3\"\n            }\n          }\n        }],\n        color: [\"#2ec7c9\", \"#b6a2de\"],\n        series: [{\n          name: '新增用户',\n          data: userData.map(item => item.new),\n          type: 'bar'\n        }, {\n          name: '活跃用户',\n          data: userData.map(item => item.active),\n          type: 'bar'\n        }]\n      };\n      echarts2.setOption(eachrts2Option);\n      const echarts3 = echarts.init(this.$refs.echarts3);\n      const eachrts3Option = {\n        tooltip: {\n          trigger: \"item\"\n        },\n        color: [\"#0f78f4\", \"#dd536b\", \"#9462e5\", \"#a6a6a6\", \"#e1bb22\", \"#39c362\", \"#3ed1cf\"],\n        series: [{\n          data: videoData,\n          type: 'pie'\n        }]\n      };\n      echarts3.setOption(eachrts3Option);\n    });\n  }\n};","map":{"version":3,"names":["getData","echarts","data","tableData","tableList","name","todayBuy","monthBuy","totalBuy","countData","value","icon","color","methods","tableRowClassName","row","rowIndex","mounted","then","userData","videoData","echarts1","init","$refs","echarts1Option","orderData","xAxis","Object","keys","xAxisData","yAxis","tooltip","legend","series","forEach","key","push","map","item","type","console","log","setOption","echarts2","eachrts2Option","textStyle","grid","left","trigger","date","axisLine","lineStyle","axisLabel","interval","new","active","echarts3","eachrts3Option"],"sources":["src/view/Home.vue"],"sourcesContent":["<template>\r\n   <div>\r\n\r\n      <el-row>\r\n         <el-col :span=\"8\" style=\"padding-right: 10px;\">\r\n            <el-card style=\"margin-bottom: 40px;\">\r\n               <div class=\"l-info\">\r\n                  <img src=\"../assets/header.jpg\" alt=\"\"\r\n                     style=\"width: 150px;height:150px;border-radius: 50%; margin-right: 30px;\">\r\n                  <div class=\"user-info\">\r\n                     <p style=\"margin-bottom: 10px; font-size: 24px; \">Adnmin</p>\r\n                     <p style=\"font-size: 16px;  color: #999999;\">超级管理员</p>\r\n                  </div>\r\n               </div>\r\n               <div class=\"r-info\">\r\n                  <p>上次登录时间：<span>2022-3-19</span></p>\r\n                  <p>上次登录地点：<span>杭州</span></p>\r\n               </div>\r\n            </el-card>\r\n            <el-card>\r\n               <el-table :data=\"tableData\" :row-class-name=\"tableRowClassName\" style=\"width: 100%;height: 400px;\">\r\n                  <el-table-column v-for=\"(val, key) in tableList\" :prop=\"key\" :label=\"val\">\r\n                  </el-table-column>\r\n               </el-table>\r\n            </el-card>\r\n         </el-col>\r\n         <el-col :span=\"16\" style=\"padding-left: 10px;\">\r\n            <div class=\"num\" style=\"display: flex; flex-wrap: wrap; justify-content: space-around\">\r\n               <el-card v-for=\"item in countData\" :key=\"item.name\" :body-style=\"{ display: 'flex', padding: 0 }\">\r\n                  <i class=\"icon\" :class=\"`el-icon-${item.icon}`\" :style=\"{ backgroundColor: item.color }\"></i>\r\n                  <div class=\"money\" style=\"display: flex; flex-direction: column; justify-content: center;\">\r\n                     <p style=\"font-size: 30px; line-height: 30px; height:30px; margin-bottom: 10px;\">￥{{ item.value }}</p>\r\n                     <p style=\"font-size: 14px; color:#999;text-align: center;\">{{ item.name }}</p>\r\n                  </div>\r\n               </el-card>\r\n            </div>\r\n            <el-card style=\"height: 260px;margin-top:10px;\">\r\n               <div ref=\"echarts1\" style=\"height: 260px; width: 100%;\"></div>\r\n            </el-card>\r\n            <div style=\"display: flex;justify-content: space-around;margin-top: 10px;\">\r\n               <el-card style=\"height: 260px;\">\r\n                  <div ref=\"echarts2\" style=\"height: 260px;width: 100%;\"></div>\r\n               </el-card>\r\n               <el-card style=\"height: 260px;\">\r\n                  <div ref=\"echarts3\" style=\"height: 250px;\"></div>\r\n               </el-card>\r\n            </div>\r\n         </el-col>\r\n\r\n      </el-row>\r\n   </div>\r\n</template>\r\n<script>\r\nimport { getData } from '@/API';\r\nimport * as echarts from 'echarts'\r\nexport default {\r\n   data() {\r\n      return {\r\n         tableData: [],\r\n         tableList: {\r\n            name: '手机',\r\n            todayBuy: '今日销售',\r\n            monthBuy: '月销售',\r\n            totalBuy: '总销售'\r\n         },\r\n         countData: [\r\n            {\r\n               name: \"今日支付订单\",\r\n               value: 1234,\r\n               icon: \"success\",\r\n               color: \"#2ec7c9\",\r\n            },\r\n            {\r\n               name: \"今日收藏订单\",\r\n               value: 210,\r\n               icon: \"star-on\",\r\n               color: \"#ffb980\",\r\n            },\r\n            {\r\n               name: \"今日未支付订单\",\r\n               value: 1234,\r\n               icon: \"s-goods\",\r\n               color: \"#5ab1ef\",\r\n            },\r\n            {\r\n               name: \"本月支付订单\",\r\n               value: 1234,\r\n               icon: \"success\",\r\n               color: \"#2ec7c9\",\r\n            },\r\n            {\r\n               name: \"本月收藏订单\",\r\n               value: 210,\r\n               icon: \"star-on\",\r\n               color: \"#ffb980\",\r\n            },\r\n            {\r\n               name: \"本月未支付订单\",\r\n               value: 1234,\r\n               icon: \"s-goods\",\r\n               color: \"#5ab1ef\",\r\n            },\r\n         ],\r\n\r\n      }\r\n   },\r\n   methods: {\r\n      tableRowClassName({ row, rowIndex }) {\r\n         if (rowIndex === 1) {\r\n            return 'warning-row';\r\n         } else if (rowIndex === 3) {\r\n            return 'success-row';\r\n         }\r\n         return '';\r\n      }\r\n   },\r\n   mounted() {\r\n      getData().then(({ data }) => {\r\n         const { tableData, userData,videoData } = data.data\r\n         this.tableData = tableData\r\n         const echarts1 = echarts.init(this.$refs.echarts1)\r\n         var echarts1Option = {}\r\n         const { orderData } = data.data\r\n         const xAxis = Object.keys(orderData.data[0])\r\n         const xAxisData = {\r\n            data: xAxis\r\n         }\r\n         echarts1Option.xAxis = {\r\n            data: [\r\n               \"一月份\", \"二月份\", \"三月份\", \"四月份\", \"五月份\", \"六月份\"\r\n            ]\r\n         }\r\n         echarts1Option.yAxis = {}\r\n         echarts1Option.tooltip = {}\r\n         echarts1Option.legend = xAxisData\r\n         echarts1Option.series = []\r\n         xAxis.forEach(key => {\r\n            echarts1Option.series.push({\r\n               name: key,\r\n               data: orderData.data.map(item => item[key]),\r\n               type: 'line'\r\n            })\r\n         })\r\n         console.log(echarts1Option)\r\n         echarts1.setOption(echarts1Option)\r\n         const echarts2 = echarts.init(this.$refs.echarts2)\r\n         const eachrts2Option = {\r\n            legend: {\r\n               // 图例文字颜色\r\n               textStyle: {\r\n                  color: \"#333\",\r\n               },\r\n            },\r\n            grid: {\r\n               left: \"20%\",\r\n            },\r\n            // 提示框\r\n            tooltip: {\r\n               trigger: \"axis\",\r\n            },\r\n            xAxis: {\r\n               type: \"category\", // 类目轴\r\n               data: userData.map(item => item.date),\r\n               axisLine: {\r\n                  lineStyle: {\r\n                     color: \"#17b3a3\",\r\n                  },\r\n               },\r\n               axisLabel: {\r\n                  interval: 0,\r\n                  color: \"#333\",\r\n               },\r\n            },\r\n            yAxis: [\r\n               {\r\n                  type: \"value\",\r\n                  axisLine: {\r\n                     lineStyle: {\r\n                        color: \"#17b3a3\",\r\n                     },\r\n                  },\r\n               },\r\n            ],\r\n            color: [\"#2ec7c9\", \"#b6a2de\"],\r\n            series: [\r\n               {\r\n                  name: '新增用户',\r\n                  data: userData.map(item => item.new),\r\n                  type: 'bar'\r\n               },\r\n               {\r\n                  name: '活跃用户',\r\n                  data: userData.map(item => item.active),\r\n                  type: 'bar'\r\n               }\r\n            ],\r\n         }\r\n         echarts2.setOption(eachrts2Option)\r\n         const echarts3 = echarts.init(this.$refs.echarts3)\r\n            const eachrts3Option = {\r\n                tooltip: {\r\n                    trigger: \"item\",\r\n                },\r\n                color: [\r\n                    \"#0f78f4\",\r\n                    \"#dd536b\",\r\n                    \"#9462e5\",\r\n                    \"#a6a6a6\",\r\n                    \"#e1bb22\",\r\n                    \"#39c362\",\r\n                    \"#3ed1cf\",\r\n                ],\r\n                series: [\r\n                    {\r\n                        data: videoData,\r\n                        type: 'pie'\r\n                    }\r\n                ],\r\n            }\r\n            echarts3.setOption(eachrts3Option)\r\n      })\r\n   }\r\n}\r\n\r\n</script>\r\n<style>\r\n.l-info {\r\n   padding-bottom: 15px;\r\n   display: flex;\r\n   align-items: center;\r\n   margin-bottom: 20px;\r\n   border-bottom: 1px solid #ccc;\r\n\r\n}\r\n\r\n.r-info p {\r\n   line-height: 28px;\r\n   font-size: 14px;\r\n   color: #999999;\r\n}\r\n\r\n.r-info span {\r\n   color: #666666;\r\n   margin-left: 60px;\r\n}\r\n\r\n.el-table .warning-row {\r\n   background: oldlace;\r\n}\r\n\r\n.el-table .success-row {\r\n   background: #f0f9eb;\r\n}\r\n\r\n.num i {\r\n   width: 80px;\r\n   height: 80px;\r\n   text-align: center;\r\n   font-size: 30px;\r\n   line-height: 80px;\r\n   color: #fff;\r\n   margin-right: 25px;\r\n}\r\n\r\n.el-card {\r\n   margin-bottom: 20px;\r\n   flex: 30%;\r\n   margin-right: 15px;\r\n\r\n}\r\n</style>\r\n"],"mappings":";AAqDA,SAAAA,OAAA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,SAAA;QACAC,IAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,SAAA,GACA;QACAJ,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA,GACA;QACAP,IAAA;QACAK,KAAA;QACAC,IAAA;QACAC,KAAA;MACA;IAGA;EACA;EACAC,OAAA;IACAC,kBAAA;MAAAC,GAAA;MAAAC;IAAA;MACA,IAAAA,QAAA;QACA;MACA,WAAAA,QAAA;QACA;MACA;MACA;IACA;EACA;EACAC,QAAA;IACAjB,OAAA,GAAAkB,IAAA;MAAAhB;IAAA;MACA;QAAAC,SAAA;QAAAgB,QAAA;QAAAC;MAAA,IAAAlB,IAAA,CAAAA,IAAA;MACA,KAAAC,SAAA,GAAAA,SAAA;MACA,MAAAkB,QAAA,GAAApB,OAAA,CAAAqB,IAAA,MAAAC,KAAA,CAAAF,QAAA;MACA,IAAAG,cAAA;MACA;QAAAC;MAAA,IAAAvB,IAAA,CAAAA,IAAA;MACA,MAAAwB,KAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAH,SAAA,CAAAvB,IAAA;MACA,MAAA2B,SAAA;QACA3B,IAAA,EAAAwB;MACA;MACAF,cAAA,CAAAE,KAAA;QACAxB,IAAA,GACA;MAEA;MACAsB,cAAA,CAAAM,KAAA;MACAN,cAAA,CAAAO,OAAA;MACAP,cAAA,CAAAQ,MAAA,GAAAH,SAAA;MACAL,cAAA,CAAAS,MAAA;MACAP,KAAA,CAAAQ,OAAA,CAAAC,GAAA;QACAX,cAAA,CAAAS,MAAA,CAAAG,IAAA;UACA/B,IAAA,EAAA8B,GAAA;UACAjC,IAAA,EAAAuB,SAAA,CAAAvB,IAAA,CAAAmC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAH,GAAA;UACAI,IAAA;QACA;MACA;MACAC,OAAA,CAAAC,GAAA,CAAAjB,cAAA;MACAH,QAAA,CAAAqB,SAAA,CAAAlB,cAAA;MACA,MAAAmB,QAAA,GAAA1C,OAAA,CAAAqB,IAAA,MAAAC,KAAA,CAAAoB,QAAA;MACA,MAAAC,cAAA;QACAZ,MAAA;UACA;UACAa,SAAA;YACAjC,KAAA;UACA;QACA;QACAkC,IAAA;UACAC,IAAA;QACA;QACA;QACAhB,OAAA;UACAiB,OAAA;QACA;QACAtB,KAAA;UACAa,IAAA;UAAA;UACArC,IAAA,EAAAiB,QAAA,CAAAkB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAW,IAAA;UACAC,QAAA;YACAC,SAAA;cACAvC,KAAA;YACA;UACA;UACAwC,SAAA;YACAC,QAAA;YACAzC,KAAA;UACA;QACA;QACAkB,KAAA,GACA;UACAS,IAAA;UACAW,QAAA;YACAC,SAAA;cACAvC,KAAA;YACA;UACA;QACA,EACA;QACAA,KAAA;QACAqB,MAAA,GACA;UACA5B,IAAA;UACAH,IAAA,EAAAiB,QAAA,CAAAkB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAgB,GAAA;UACAf,IAAA;QACA,GACA;UACAlC,IAAA;UACAH,IAAA,EAAAiB,QAAA,CAAAkB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAiB,MAAA;UACAhB,IAAA;QACA;MAEA;MACAI,QAAA,CAAAD,SAAA,CAAAE,cAAA;MACA,MAAAY,QAAA,GAAAvD,OAAA,CAAAqB,IAAA,MAAAC,KAAA,CAAAiC,QAAA;MACA,MAAAC,cAAA;QACA1B,OAAA;UACAiB,OAAA;QACA;QACApC,KAAA,GACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA;QACAqB,MAAA,GACA;UACA/B,IAAA,EAAAkB,SAAA;UACAmB,IAAA;QACA;MAEA;MACAiB,QAAA,CAAAd,SAAA,CAAAe,cAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}